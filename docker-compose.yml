version: '3'
services:
  main:
    build: .
    image: opuscapita/peppol-monitor:dev
    depends_on:
     - mysql
     - consul
     - registrator
     - redis
     - kong
     - auth
     - blob
     - rabbitmq
     - user
     - api-registry
    labels:
      SERVICE_NAME: 'peppol-monitor'
      SERVICE_TAGS: 'kong'
    environment:
      PORT: 3041
      SERVICE_NAME: ${SERVICE_NAME}
      SERVICE_3041_NAME: ${SERVICE_NAME}
      SERVICE_3041_CHECK_HTTP: /api/health/check
      SERVICE_3041_CHECK_INTERVAL: 15s
      SERVICE_3041_CHECK_TIMEOUT: 3s
    ports:
     - '3041:3041'

  mysql:
    image: "mysql:5.7"
    command: ['--character-set-server=utf8', '--collation-server=utf8_general_ci']
    ports:
      - "3306:3306"
    labels:
      SERVICE_3306_NAME: mysql
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: ${SERVICE_NAME}
    depends_on:
      - registrator

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '4369:4369'
      - '5671:5671'
      - '5672:5672'
      - '15672:15672'
    environment:
      SERVICE_5672_NAME: 'rabbitmq-amqp'

  redis:
    image: opuscapita/redis:dev
    ports:
      - '6379:6379'
    environment:
      REDIS_AUTH: ${REDIS_AUTH}
    depends_on:
      - registrator

  kong:
    image: opuscapita/kong:dev
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_PORT: $KONG_PG_PORT
      APP_HOST: $HOST_IP
      APP_HOST_PROTOCOL: $APP_HOST_PROTOCOL
      APP_HOST_PORT: $APP_HOST_PORT
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_HOST: $HOST_IP # TODO: remove after api-gw is using config
      REDIS_PORT: 6379 # TODO: remove after api-gw is using config
      REDIS_AUTH: $REDIS_AUTH # TODO: remove after api-gw is using config
      SERVICE_8001_NAME: 'kong'
      SERVICE_8080_NAME: 'kong-http'
    ports:
      - '8080:8080'
      - '8443:8443'
      - '8001:8001'
      - '7946:7946'
      - '7946:7946/udp'
    depends_on:
      - postgres
      - mysql
      - redis

  auth:
    image: opuscapita/auth:dev
    ports:
     - '3005:3005'
    environment:
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      REDIS_AUTH: ${REDIS_AUTH}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQUSER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQPASS}
      SERVICE_3005_CHECK_HTTP: /auth/certs
      SERVICE_3005_CHECK_INTERVAL: 15s
      SERVICE_3005_CHECK_TIMEOUT: 3s
    depends_on:
      - kong
      - consul
    command: 'npm run dev:production'

  blob:
    image: opuscapita/blob:dev
    depends_on:
      - mysql
      - consul
      - registrator
    labels:
      SERVICE_NAME: 'blob'
      SERVICE_TAGS: 'external,kong'
    environment:
      SERVICE_3012_CHECK_HTTP: /api/health/check
      SERVICE_3012_CHECK_TIMEOUT: 3s
      SERVICE_3012_CHECK_INTERVAL: 15s
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
      BLOB_ACCOUNT: ${BLOB_ACCOUNT}
      BLOB_KEY: ${BLOB_KEY}
    ports:
      - '3012:3012'
    command: 'npm run dev:production'

  user:
    image: opuscapita/user:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - rabbitmq
      - acl
    labels:
      SERVICE_NAME: 'user'
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      REDIS_AUTH: $REDIS_AUTH
      CLIENT_KEY: $CLIENT_KEY
      CLIENT_SECRET: $CLIENT_SECRET
      RABBITMQ_USER: ${SECRET_develop_RABBITMQUSER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQPASS}
      SERVICE_3008_CHECK_HTTP: /api/health/check
      SERVICE_3008_CHECK_INTERVAL: 15s
      SERVICE_3008_CHECK_TIMEOUT: 3s
    ports:
      - '3008:3008'
    command: 'npm run dev'

  acl:
    image: opuscapita/acl:dev
    labels:
      - 'SERVICE_NAME=acl'
      - 'SERVICE_TAGS=external,kong'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQUSER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQPASS}
      SECURITY_MODE: local
      SERVICE_3013_CHECK_HTTP: /api/health/check
      SERVICE_3013_CHECK_INTERVAL: 15s
      SERVICE_3013_CHECK_TIMEOUT: 3s
    ports:
     - '3013:3013'
    depends_on:
      - registrator
      - mysql
    command: 'npm run dev'

  api-registry:
    image: opuscapita/api-registrator:dev
    ports:
      - 3004:3004
    environment:
      SERVICE_3002_CHECK_HTTP: /api/health/check
      SERVICE_3002_CHECK_INTERVAL: 15s
      SERVICE_3002_CHECK_TIMEOUT: 3s
    depends_on:
      - kong

  postgres:
    image: postgres:9.4
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: $POSTGRES_DB
      POSTGRES_DB: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    depends_on:
      - registrator

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul
    restart: on-failure

  consul:
    image: consul:latest
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'
    command: [agent, '-server', '-ui', '-bootstrap', '-client=0.0.0.0']

